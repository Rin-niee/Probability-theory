# –ù–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã Z = 8X - 5Y + 7 , –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ M ( X ) = 3, M (Y ) = 2 .
print("–§–æ—Ä–º—É–ª–∞ Z = 8X - 5Y + 7")
Mx = int(input("M(x)=?"))
My = int(input("M(y)=?"))
Mz = 8*Mx - 5*My + 7
print("M(z)= ", Mz)

# 2. –ù–∞–π—Ç–∏ –¥–∏—Å–ø–µ—Ä—Å–∏—é —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã Z = 8X - 5Y + 7 , –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã X –∏ Y –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã –∏ D(X ) = 1,5, D(Y ) = 1.
print("–§–æ—Ä–º—É–ª–∞ Z = 8X - 5Y + 7")
Dx = float(input("D(x)=?"))
Dy = float(input("D(y)=?"))
Dz = 8*8*Dx - 5*5*Dy + 7
print("D(z)= ", Dz)
# 3. –†—è–¥ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
# –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –ø—Ä–∏–º–µ—Ç –æ–¥–Ω–æ –∏–∑ —ç—Ç–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π, —Ä–∞–≤–Ω–∞ 0,8.
# –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä—è–¥ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã, –µ—Å–ª–∏ –µ–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —Ä–∞–≤–Ω–æ 3,2, –∞ –¥–∏—Å–ø–µ—Ä—Å–∏—è 0,16.
P3 = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è"))
P31 = P3-1
Mx = int(input("M(x)=?"))
My = int(input("D(x)=?"))
# P3*x1 +P31 * x2 = Mx
# (P3**2) * x1 +(P31**2) * x2 = Dx

M1 = np.array([[P3, P31], [P3, P31]])
M2 = np.array([Mx, Dx-Mx**(2)])
M = np.linalg.solve(M1, M2)
print("–†–µ—à–µ–Ω–∏–µ: ", M)

# 4. –î–∞–Ω—ã –∑–∞–∫–æ–Ω—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–≤—É—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω:
# –ù–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –¥–∏—Å–ø–µ—Ä—Å–∏—é —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã Z = 2X+3Y.
print("–§–æ—Ä–º—É–ª–∞ Z = 2X+3Y")

xi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ xi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
pxi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ Pi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
yi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ yi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
pyi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ Pi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
zij = []
zij2 = []
Pi=[]
for i in range(len(xi)):
    for j in range(len(yi)):
        k = 2*xi[i]+3*yi[j]
        k1 = k**2
        zij.append(k)
        zij2.append(k1)
        k3 = xi[i]*yi[j]
        Pi.append(k3)
Mx=0
for i in range(len(zij)):
    for j in range(len(Pi)):
        Mx += zij*Pi
x=0
for j in range(len(Pi)):
    x+=Pi[i]**2

Dx = x-Mx**2

print("–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ: ", Mx, "\n–î–∏—Å–ø–µ—Ä—Å–∏—è: ", Dx)

# 5. –ß–∏—Å–ª–æ –∏–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏—Ö —Å—É–¥–æ–≤, –ø—Ä–∏–±—ã–≤–∞—é—â–∏—Ö –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–¥ –ø–æ–≥—Ä—É–∑–∫—É –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–æ—Ä—Ç ‚Äì —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ X, –∑–∞–¥–∞–Ω–Ω–∞—è —Ç–∞–∫:
# —Ö 3 4 5 6 7
# —Ä 0.1 0.2 0.4 0.1 0.2
# –∞) –ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í –•, –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –µ–µ –≥—Ä–∞—Ñ–∏–∫;
# –±) –ï—Å–ª–∏ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å –ø—Ä–∏–±—ã–≤–∞–µ—Ç –±–æ–ª—å—à–µ –ø—è—Ç–∏ —Å—É–¥–æ–≤, —Ç–æ –ø–æ—Ä—Ç –±–µ—Ä–µ—Ç –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∏–∑–¥–µ—Ä–∂–∫–∏ –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞–Ω–∏–º–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –≥—Ä—É–∑—á–∏–∫–æ–≤. –ß–µ–º—É —Ä–∞–≤–Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –ø–æ—Ä—Ç –ø–æ–Ω–µ—Å–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã?
# –≤) –ù–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –¥–∏—Å–ø–µ—Ä—Å–∏—é —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã X.
xi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ xi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
pxi = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ Pi —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
k=0
Fx=[]
for i in range(len(xi)):
    Fx.append(k)
    k+=xi[i]

# –°–æ–∑–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
x1 = [xi[0]]
y1 = [0, Fx[0]]
x2 = [xi[1]]
y2 = [Fx[0], Fx[1]]
x3 = [xi[2]]
y3 = [Fx[1], Fx[2]]
x4 = [xi[3]]
y4 = [Fx[2], Fx[3]]
x5 = [xi[4]]
y5 = [Fx[3], Fx[4]]
x6 = [xi[5]]
y6 = [Fx[4], Fx[5]]
plt.plot(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, color='red')
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.show()

# 6. –°–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ X –∑–∞–¥–∞–Ω–∞ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ f(x)=x/2 –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ (0; 2),
# –≤–Ω–µ —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ f(x)=0. –ù–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –¥–∏—Å–ø–µ—Ä—Å–∏—é —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã X.
import scipy.integrate
fx = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:"))
x = [int(value) for value in input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª").split()]
f0 = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞:"))
def f(x):
    return x*x/2
x0=x[0]
x1=x[1]
integral, error = scipy.integrate.quad(f, x0, x1)

def f1(x):
    return x*x*x/2
x0=x[0]
x1=x[1]
integral1, error1 = scipy.integrate.quad(f1, x0, x1)

print("–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ: ", integral, "\n–î–∏—Å–ø–µ—Ä—Å–∏—è: ", integral1)

# 7. –°–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ —Ö –∑–∞–¥–∞–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
# ùêπ(ùë•)= {0 –ø—Ä–∏ —Ö‚â§0 —Ö**2/36 –ø—Ä–∏ 0<—Ö‚â§6 1 –ø—Ä–∏ —Ö>6
# –¢—Ä–µ–±—É–µ—Ç—Å—è:
# –∞) –Ω–∞–π—Ç–∏ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é (–ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏);
# –±) –Ω–∞–π—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –¥–∏—Å–ø–µ—Ä—Å–∏—é —Ö;
# –≤) –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π –∏ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–π.
def f(x):
    return x*x/18
def f1(x):
    return x*x*x/18
integral, error = scipy.integrate.quad(f, 6, 0)
integral1, error1 = scipy.integrate.quad(f1, 6, 0)
Dx = integral1 - integral**2


# 8. –î–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã
# –∞) –Ω–∞–π—Ç–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ f(x),
# –±) –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ f(x) –∏ F(x),
# –≤) –Ω–∞–π—Ç–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ P(X=1), P(X<1), H(1<=X<2),
# –≥) –≤—ã—á–∏—Å–ª–∏—Ç—å M(X), D(X)

def f(x):
    return x*x/2
def f1(x):
    return x*x*x/2
integral, error = scipy.integrate.quad(f, 2, 0)
integral1, error1 = scipy.integrate.quad(f1, 2, 0)
Dx = integral1 - integral**2
Px1 =0
Px11=1/4
P1x2 = 3/4
print(integral, Dx, Px1, Px11)
