def factor(f):
    if f == 1:
        return 1
    if f == 0:
        return 1
    else:
        return factor(f-1)*f

def sochet(k, k1):
    o = factor(k)/(factor(k1) * factor(k-k1))
    return o

def fbernuli(n, k, p, q):
    x = sochet(n, k)*(p**(k))* (q**(n-k))
    return x

#1В среднем 20% пакетов акций на аукционах продаются по первоначально заявленной цене. 
# Найти вероятность того, что из 9 пакетов акций в результате торгов по первоначально заявленной цене: 
#     1) не будут проданы 5 пакетов; 
#     2) будет продано: а) менее 2 пакетов; б) не более 2; в) хотя бы 2 пакета; г) наивероятнейшее число пакетов
A1 = int(input("Сколько пакетов продаются по первоначальной цене?"))/100
n1 = int(input("Сколько пакетов продается?"))
Pan = int(input("Сколько пакетов не продано?"))
P1 = 1-A1
#1
Pa11 =  fbernuli(n1, Pan, P1, A1) #вероятность того, что не продано n пакетов
#2a
k11 = 1
k10 = 0
k12=2
Pa12 =  fbernuli(n1, k11, A1, P1) + fbernuli(n1, k10, A1, P1)
#2b
Pa13 = fbernuli(n1, k11, A1, P1) + fbernuli(n1, k10, A1, P1) + fbernuli(n1, k12, A1, P1)
#2c
Pa14 = 1- fbernuli(n1, k11, A1, P1) - fbernuli(n1, k10, A1, P1)
#2d 
k11D = n1* A1 - P1
k12D = n1*A1 + A1
Pa15 = fbernuli(n1, k11D, A1, P1) + fbernuli(n1, k12D, A1, P1)

#2 Сколько раз необходимо подбросить игральную кость, чтобы наивероятнейшее выпадение тройки было равно 10? 

k = int(input("Введите наивероятнейшее число выпадения числа"))
p = 1/6
q = 1-1/6
n1 = (k +q)/ p
n2 = (k -p)/ p
print(n2, n1)
print(Pa11, Pa12, Pa13, Pa14, Pa15)

#3 Сколько следует сыграть партий в шахматы с вероятностью победы в одной партии, равной 1/3, чтобы наивероятнейшее число побед было равно 5?
k = int(input("Введите наивероятнейшее число побед:"))
p = float(input("Введите вероятность:"))
q = 1-p
n1 = (k + q) / p
n2 = (k - p) / p
print(n2, n1)

#4 Пусть вероятность того, что телевизор потребует ремонта в течение гарантийного срока, равна 0,2. 
# Найти вероятность того, что в течение гарантийного срока из 6 телевизоров: 
# а) не более одного потребует ремонта; б) хотя бы один не потребует ремонта.

p4 = float(input("Введите вероятность поломки в течение года"))
q6 = 1-p4
n6 = int(input("Введите количество телевизоров"))
k40 =0
k41 =1
k46 = 6
Pa4 = fbernuli(n6, k40, p4, q6) + fbernuli(n6, k41, p4, q6)
Pb4 = 1- fbernuli(n6, k46, p4, q6)
print ( Pa4, Pb4)

#5 Что более вероятно выиграть у равносильного противника: не менее двух партий из трёх или не более одной из двух?
p5 = 0.5
q5 = 1- p5
#1
n51 =3 
k51 = 2
k52 = 3
#2
n52 = 2
k53 = 0
k54 = 1


Pa5 = fbernuli(n51, k51, p5, q5)+ fbernuli(n51, k52, p5, q5)
Pb5 = fbernuli(n52, k53, p5, q5) + fbernuli(n52, k54, p5, q5)
if Pa5 > Pb5:
    print("a: ",Pa5)
if Pb5 > Pa5:
    print("B: ", Pb5)

from sympy.integrals import laplace_transform
import math
#6
print("Вероятность попадания в кольцо при штрафном броске для баскетболиста равна 0,8. Сколько надо произвести бросков, чтобы наивероятнейшее число попаданий было равно 20?")
p = float(input("Введите вероятность попадания"))
q = 1-p
k = int(input("Введите наивероятнейшее число попаданий"))
n1=(k//p)+q
n2 = (k+p)//p
print("надо произвести", n1, n2, " бросков")

#7
print("Пусть вероятность того, что студент опоздает на лекцию, равна 0,08. Найти наиболее вероятное число опоздавших из 96 студентов.")
p = float(input("Введите вероятность того, что студент опоздает на лекцию"))
q = 1-p
n = int(input("Введите  число студентов"))
k1 = int(p*n-q)
k2 = int(n*p+p)

print("наиболее вероятное число опоздавших", k1-k2)

#8

print("В результате каждого визита страхового агента договор заключается с вероятностью 0,1. Найти наивероятнейшее число заключенных договоров после 25 визитов.")
p = float(input("Введите вероятность заключения договора"))
q = 1-p
n = int(input("Введите  число визитов"))
k1 = int(p*n-q)
k2 = int(n*p+p)

print("наиболее вероятное число заключенных договоров", k1-k2)

#9

print("Найти вероятность того, что в 243 испытаниях событие А наступит ровно 70 раз, если вероятность наступления этого события в каждом испытании равна 0,25")
p = float(input("Введите вероятность"))
q = 1-p
n = int(input("Введите  число испытаний"))
k = int(input("Введите наивероятнейшее число событий"))
x = (k-(n*p))/((n*p*q)**(1/2))
Pn = (1/((n*p*q)**(1/2)))*0.1561
print(Pn)

#10

print("Фабрика выпускает 70% продукции первого сорта. Чему равна вероятность, что в партии из 1000 изделий число изделий первого сорта от 652 до 760. ")
p = int(input("выпускает продукции первого сорта"))/100
q=1-p
n = int(input("Введите число изделий"))
k1 = int(input("Введите число изделий первого сорта 1"))
k2 = int(input("Введите число изделий первого сорта 2"))
F1 = (k2 - n*p)/((p*q)**(1/2))
F2 =(k1 - n*p)/((p*q)**(1/2))
print(0,49952+0,49998)

#11
print("Известно, что процент брака для некоторой детали равен 0,5%. Контролер проверяет 1000 деталей. Какова вероятность обнаружить ровно три бракованные детали? Какова вероятность обнаружить не меньше трех бракованных деталей?")

p = int(input("процент брака"))/100
q = 1-p
n = int(input("Введите число деталей"))
k = int(input("Введите число бракованных деталей"))
L = n*p
PnA = (math.exp(-L)*(L**k))/(math.fabs(k))
print(PnA)
o=0
sum = 0
while o>k:
    sum+= (math.exp(-L) * (L ** o)) / (math.fabs(o))
    o = o+1
print(sum)


#12
print("На факультете насчитывается 1825 студентов. Какова вероятность того, что 1 сентября является днем рождения одновременно четырех студентов факультета?")
n = int(input("Введите число студентов"))
k = int(input("Введите число студентов c днем рождения"))
p = 1/365
L = n*p
PnA = (math.exp(-L)*(L**k))/(math.fabs(k))
print(PnA)

#13
print("Завод отправил на базу 10 000 стандартных изделий. Среднее число изделий, повреждаемых при транспортировке, составляет 0,02%. Найти вероятность того, что из 10 000 изделий: 1) будет повреждено: а) три изделия; б) по крайней мере три изделия; 2) не будет повреждено: а) 9997; б) хотя бы 9997.")
n = int(input("Введите число изделий"))
p = int(input("Введите процент повреждаемых при транспортировке изделий"))/100
L = n*p
k1 = int(input("Введите число повреждаемых при транспортировке изделий"))
PnA1 = (math.exp(-L)*(L**k1))/(math.fabs(k1))
print(PnA1)
o=0
sum = 0
while o>k1:
    sum+= (math.exp(-L) * (L ** o)) / (math.fabs(o))
    o = o+1
print(sum)
print(PnA1)
PnA2= 1 - (math.exp(-L)*(L**k1))/(math.fabs(k1))
print(PnA2)

#14

print("По результатам проверок налоговыми инспекциями установлено, что в среднем каждое второе малое предприятие региона имеет нарушение финансовой дисциплины. Найти вероятность того, что из 1000 зарегистрированных в регионе малых предприятий имеют нарушения финансовой дисциплины 480 предприятий.")
p = float(input("Введите вероятность"))
q = 1-p
n = int(input("Введите  число предприятий"))
k = int(input("Введите  число предприятий имеют нарушения"))
x = (k-(n*p))/((n*p*q)**(1/2))
Pn = (1/((n*p*q)**(1/2)))*0.1792
print(Pn)

